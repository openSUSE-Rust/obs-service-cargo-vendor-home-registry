<?xml version="1.0" encoding="UTF-8"?>
<service name="cargo_vendor_home_registry">
   <summary>OBS Source Service to vendor all crates.io and dependencies for a Rust project but from the CARGO_HOME registry.</summary>
   <description><![CDATA[Similar to obs-service-cargo-vendor, this service extracts a Rust application source, searches for a Rust application containing a Cargo.toml file, download all crates.io and dependencies, and creates a vendor.tar[.<tar compression>] to be committed allowing fully offline builds of Rust applications. Only difference is using `cargo fetch` and CARGO_HOME to get crates.io dependencies.]]></description>
   <parameter name="strategy">
      <description>Legacy argument, no longer used. Values: vendor-home-registry. Default: vendor-home-registry</description>
   </parameter>
   <parameter name="target">
      <description>Where to find sources. Source is either a directory or a source tarball AND cannot be both. Aliases: src, srctar, srcdir</description>
   </parameter>
   <parameter name="outdir">
      <description>Specify where to put the vendor tarball</description>
   </parameter>
   <parameter name="update">
      <description>Whether to update dependencies or not. Default: true</description>
      <allowedvalue>false</allowedvalue>
      <allowedvalue>true</allowedvalue>
   </parameter>
   <parameter name="tag">
      <description>Whether to add a tag after the name "registry" appended with a "-". Useful if you plan to set `CARGO_HOME` in different contexts.</description>
   </parameter>
   <parameter name="compression">
      <description>What compression algorithm to use. Set to `not` if you just want a normal tarball with no compression. Default: zst</description>
      <allowedvalues>zst</allowedvalues>
      <allowedvalues>gz</allowedvalues>
      <allowedvalues>xz</allowedvalues>
      <allowedvalues>bz2</allowedvalues>
      <allowedvalues>not</allowedvalues>
   </parameter>
   <parameter name="manifest-paths">
      <description>Additional manifests paths.</description>
   </parameter>
   <parameter name="i-accept-the-risk">
      <description>A list of rustsec-id's to ignore. By setting this value, you acknowledge that this issue does not affect your package and you should be exempt from resolving it.</description>
   </parameter>
   <parameter name="no-root-manifest">
      <description>If a project has no root manifest, this flag is useful for those situations to set the manifest path manually</description>
   </parameter>
   <parameter name="custom-root>
      <description>Whether you want to manually set the root of the project.</description>
   </parameter>
</service>

